swagger: '2.0'
info:
  version: '1.0.0'
  title: Tasks
  description: Tasks management service
  contact:
    name: Witold Adamus
    email: witekadamus@gmail.com
    url: http://wit3k.pl
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: tasks.wit3k.
basePath: /api
schemes:
  - http
  - https
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
tags:
  -
    name: task
    description: Everything about your Tasks
paths:
  /tasks:
    get:
      tags:
        - task
      description: Returns all tasks from the system that the user has access to
      operationId: findTasks
      produces:
        - application/json
        - application/xml
      parameters:
        - name: context
          in: query
          description: contexts to filter by
          required: false
          type: array
          items:
            type: string
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: array
          items:
            type: string
          collectionFormat: csv
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        - name: offset
          in: query
          description: offset of results to return
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: task response
          schema:
            type: array
            items:
              $ref: '#/definitions/TaskInfo'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    post:
      tags:
        - task
      description: Creates a new task.  Duplicates are not allowed
      operationId: addTask
      produces:
        - application/json
      parameters:
        - name: task
          in: body
          description: Task to add
          required: true
          schema:
            $ref: '#/definitions/TaskInput'
      responses:
        '200':
          description: task response
          schema:
            $ref: '#/definitions/TaskInfo'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
  /tasks/{id}:
    get:
      tags:
        - task
      description: Returns a user based on a single ID, if the user does not have access to the task
      operationId: findTaskById
      produces:
        - application/json
        - application/xml
      parameters:
        - name: id
          in: path
          description: ID of task to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: task response
          schema:
            $ref: '#/definitions/TaskInfo'
        '404':
          description: not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
    patch:
      tags:
        - task
      description: Updates a task
      operationId: editTask
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of task to patch
          required: true
          type: integer
          format: int64
        - name: patchOp
          in: body
          description: PatchOperations to be performed
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/PatchOperation'
      responses:
        '200':
          description: task response
          schema:
            $ref: '#/definitions/TaskInfo'
        '404':
          description: not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      tags:
        - task
      description: deletes a single task based on the ID supplied
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: ID of task to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: task deleted
        '404':
          description: not found
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'
definitions:
  TaskInfo:
    required:
      - id
      - name
      - projectId
      - context
      - urgency
      - importance
      - timeDivident
    properties:
      id:
        type: integer
        format: int64
      audit:
        $ref: "#/definitions/Audit"
      name:
        type: string
      projectId:
        type: integer
      tag:
        type: array
        items:
          type: string
      context:
        type: array
        items:
          type: string
      deadline:
        type: integer
      urgentFrom:
        type: integer
      estimation:
        type: integer
      urgency:
        type: integer
      importance:
        type: integer
      timeDivident:
        type: integer
      order:
        type: integer
  TaskInput:
    required:
      - id
      - name
      - projectId
      - context
      - urgency
      - importance
      - timeDivident
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      projectId:
        type: integer
      tag:
        type: array
        items:
          type: string
      context:
        type: array
        items:
          type: string
      deadline:
        type: integer
      urgentFrom:
        type: integer
      estimation:
        type: integer
      urgency:
        type: integer
      importance:
        type: integer
      timeDivident:
        type: integer
      order:
        type: integer
  Audit:
    required:
      - created
      - owner
    properties:
      created:
        type: integer
      edited:
        type: integer
      archived:
        type: integer
      owner:
        type: string
      editor:
        type: string
      archiver:
        type: string
  PatchOperation:
    required:
      - op
      - path
      - value
    properties:
      op:
        type: string
      path:
        type: string
      value:
        type: string
  ErrorModel:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
